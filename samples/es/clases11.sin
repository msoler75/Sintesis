clase Persona {

    nombre, apellidos
    
    constructor (nombre, apellidos) {
        asignaNombre (nombre)
        asignaApellidos(apellidos)
    }
    
    asignaNombre(nombre) {
        atributos.nombre=nombre
    }
    
    asignaApellidos(apellidos) {
        atributos.apellidos = apellidos
    }
    
    texto() {
        retornar 'Persona (nombre#'+nombre+', apellidos#'+apellidos+')'
    }  
}
    
    
    
clase Cliente extiende Persona {
    
    dni
    // además hereda los atributos del padre
    // nombre
    // apellidos
    
    
    constructor (dni, nombre, apellidos) {
        super(nombre, apellidos)
        asignaDNI(dni)
    }
    
    asignaDNI(dni) {
        atributos.dni = dni
    }
    
    texto() {
        retornar 'Cliente (dni -> '+dni+', '+'nombre -> '+nombre+', apellidos -> '+apellidos+')'
    }
    
    // además hereda los métodos del padre (clase Persona)
    // asignaNombre(nombre) ...
    // asignaApellidos(apellidos) ...
    
}
    
    
    
// persona

p = nueva Persona ('Andrés', 'Pérez')
imprimir p
imprimir p.texto()

imprimir "(antes) nombre: ", p.nombre, p.atributos.nombre
imprimir "(antes) apellidos: ", p.apellidos, p.atributos.apellidos

p.asignaNombre('Laura')
p.asignaApellidos('Gutierrez')

imprimir p.texto()

imprimir "(después) nombre: ", p.nombre, p.atributos.nombre
imprimir "(después) apellidos: ", p.apellidos, p.atributos.apellidos

si(p es Persona) 
print p.nombre, "es persona"

si(p es Cliente) 
print p.nombre, "es cliente"

si(p es NoExiste) 
print "no existe"

// cliente

c = nuevo Cliente(777, 'Jorge', 'García')
imprimir c.texto()

c.asignaDNI(1234567)
c.asignaNombre('María')
c.asignaApellidos('López')

imprimir c.texto()

c.metodos.asignaNombre('Marcel')
c.metodos.asignaApellidos('Soler')
c.metodos.asignaDNI('987654321')

imprimir c.texto()

imprimir "nombre:", c.atributos.nombre, c.nombre
imprimir "apellidos:", c.atributos.apellidos, c.apellidos
imprimir "dni:", c.atributos.dni, c.dni

c.nombre = "Paco"

imprimir "(después del cambio de nombre) nombre:", c.nombre, c.atributos.nombre

si(c es Persona) 
print c.nombre, "es persona"

si(c es Cliente) 
print c.nombre, "es cliente"